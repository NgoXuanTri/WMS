//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RMS.DA
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DocumentDBEntities : DbContext
    {
        public DocumentDBEntities()
            : base("name=DocumentDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cartontmp> Cartontmps { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Deleted_DSDOCartons> Deleted_DSDOCartons { get; set; }
        public virtual DbSet<Deleted_DSROCartons> Deleted_DSROCartons { get; set; }
        public virtual DbSet<DocumentVersion> DocumentVersions { get; set; }
        public virtual DbSet<DSCartonCategory> DSCartonCategories { get; set; }
        public virtual DbSet<DSCartonDetail> DSCartonDetails { get; set; }
        public virtual DbSet<DSCartonMovementDetail> DSCartonMovementDetails { get; set; }
        public virtual DbSet<DSCartonMovement> DSCartonMovements { get; set; }
        public virtual DbSet<DSCartonsNew> DSCartonsNews { get; set; }
        public virtual DbSet<DSCartonStockOnHandDaily> DSCartonStockOnHandDailies { get; set; }
        public virtual DbSet<DSCartonStockOnHandMonthly> DSCartonStockOnHandMonthlies { get; set; }
        public virtual DbSet<DSClosedPeriod> DSClosedPeriods { get; set; }
        public virtual DbSet<DSDispatchingOrder> DSDispatchingOrders { get; set; }
        public virtual DbSet<DSDOCarton> DSDOCartons { get; set; }
        public virtual DbSet<DSLocation> DSLocations { get; set; }
        public virtual DbSet<DSReceivingOrder> DSReceivingOrders { get; set; }
        public virtual DbSet<DSROCarton> DSROCartons { get; set; }
        public virtual DbSet<dtproperty> dtproperties { get; set; }
        public virtual DbSet<OrderDetail> OrderDetails { get; set; }
        public virtual DbSet<OrderMaster> OrderMasters { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<RequestCarton> RequestCartons { get; set; }
        public virtual DbSet<Request> Requests { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<tmpAttachment> tmpAttachments { get; set; }
        public virtual DbSet<tmpBillingCustomer> tmpBillingCustomers { get; set; }
        public virtual DbSet<tmpBillingReport> tmpBillingReports { get; set; }
        public virtual DbSet<tmpCu> tmpCus { get; set; }
        public virtual DbSet<tmpCustomer> tmpCustomers { get; set; }
        public virtual DbSet<tmpCustomersViewStock> tmpCustomersViewStocks { get; set; }
        public virtual DbSet<tmpDSCartonsNew_Import> tmpDSCartonsNew_Import { get; set; }
        public virtual DbSet<tmpDSCustomersCarton> tmpDSCustomersCartons { get; set; }
        public virtual DbSet<tmpDSDispatchingOrderID> tmpDSDispatchingOrderIDs { get; set; }
        public virtual DbSet<tmpDSDispatchingOrderID_Recent> tmpDSDispatchingOrderID_Recent { get; set; }
        public virtual DbSet<tmpDSLocation> tmpDSLocations { get; set; }
        public virtual DbSet<tmpDSOrdersUpdate> tmpDSOrdersUpdates { get; set; }
        public virtual DbSet<tmpL> tmpLs { get; set; }
        public virtual DbSet<tmpLocationsWM> tmpLocationsWMS { get; set; }
        public virtual DbSet<tmpLocForStockTake> tmpLocForStockTakes { get; set; }
        public virtual DbSet<tmpNoteDispatchingOder> tmpNoteDispatchingOders { get; set; }
        public virtual DbSet<tmpNoteDispatchingOderDetail> tmpNoteDispatchingOderDetails { get; set; }
        public virtual DbSet<tmpTruckchecking> tmpTruckcheckings { get; set; }
        public virtual DbSet<tmpWebDSStockOnHandMonthly> tmpWebDSStockOnHandMonthlies { get; set; }
        public virtual DbSet<TruckChecking> TruckCheckings { get; set; }
        public virtual DbSet<Aisle> Aisles { get; set; }
        public virtual DbSet<BillingDetailBreakDown> BillingDetailBreakDowns { get; set; }
        public virtual DbSet<ContainerChecking> ContainerCheckings { get; set; }
        public virtual DbSet<Gate_ContInOut> Gate_ContInOut { get; set; }
        public virtual DbSet<Gate_TruckInOut> Gate_TruckInOut { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<tpmContainerChecking> tpmContainerCheckings { get; set; }
        public virtual DbSet<View_aspnet_Users> View_aspnet_Users { get; set; }
        public virtual DbSet<View_BillingBreakDown> View_BillingBreakDown { get; set; }
        public virtual DbSet<View_Customers> View_Customers { get; set; }
        public virtual DbSet<View_DSCustomerListBillings_> View_DSCustomerListBillings_ { get; set; }
        public virtual DbSet<View_DSLocationBarcode> View_DSLocationBarcode { get; set; }
        public virtual DbSet<View_DSLocationsAll> View_DSLocationsAll { get; set; }
        public virtual DbSet<View_DSLocationsHasCartons> View_DSLocationsHasCartons { get; set; }
        public virtual DbSet<View_Employees> View_Employees { get; set; }
        public virtual DbSet<View_ServicesDefinition> View_ServicesDefinition { get; set; }
        public virtual DbSet<View_WebUsers> View_WebUsers { get; set; }
        public virtual DbSet<ViewCartonDispatchedLast2days> ViewCartonDispatchedLast2days { get; set; }
        public virtual DbSet<ViewCartonOnHand> ViewCartonOnHands { get; set; }
        public virtual DbSet<ViewCustomer> ViewCustomers { get; set; }
    
        public virtual ObjectResult<SP_DSBillingByCustomerPeriodAll_Result> SP_DSBillingByCustomerPeriodAll(Nullable<int> billingID)
        {
            var billingIDParameter = billingID.HasValue ?
                new ObjectParameter("BillingID", billingID) :
                new ObjectParameter("BillingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSBillingByCustomerPeriodAll_Result>("SP_DSBillingByCustomerPeriodAll", billingIDParameter);
        }
    
        public virtual int SP_DSBillingConfirmationAdd_New(Nullable<int> varCustomerID, Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varToDate, string currentUser)
        {
            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));
    
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));
    
            var varToDateParameter = varToDate.HasValue ?
                new ObjectParameter("varToDate", varToDate) :
                new ObjectParameter("varToDate", typeof(System.DateTime));
    
            var currentUserParameter = currentUser != null ?
                new ObjectParameter("CurrentUser", currentUser) :
                new ObjectParameter("CurrentUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSBillingConfirmationAdd_New", varCustomerIDParameter, varFromDateParameter, varToDateParameter, currentUserParameter);
        }
    
        public virtual int SP_DSBillingReport_New()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSBillingReport_New");
        }
    
        public virtual int SP_DSBillingRun1Customer(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, Nullable<int> varCustomerID, Nullable<int> varEmployeeID)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));
    
            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));
    
            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));
    
            var varEmployeeIDParameter = varEmployeeID.HasValue ?
                new ObjectParameter("varEmployeeID", varEmployeeID) :
                new ObjectParameter("varEmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSBillingRun1Customer", varFromDateParameter, varTodateParameter, varCustomerIDParameter, varEmployeeIDParameter);
        }
    
        public virtual int SP_DSBillingRunByCustomer(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, string varCustomerString, Nullable<int> employeeID)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));
    
            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));
    
            var varCustomerStringParameter = varCustomerString != null ?
                new ObjectParameter("varCustomerString", varCustomerString) :
                new ObjectParameter("varCustomerString", typeof(string));
    
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSBillingRunByCustomer", varFromDateParameter, varTodateParameter, varCustomerStringParameter, employeeIDParameter);
        }
    
        public virtual int SP_DSBillingRunByCustomerInsert(Nullable<int> customerID, Nullable<int> varEmployeeID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var varEmployeeIDParameter = varEmployeeID.HasValue ?
                new ObjectParameter("varEmployeeID", varEmployeeID) :
                new ObjectParameter("varEmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSBillingRunByCustomerInsert", customerIDParameter, varEmployeeIDParameter);
        }
    
        public virtual int SP_DSBillingStockMovement(Nullable<int> customerID, string varFromDate, string varToDate)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var varFromDateParameter = varFromDate != null ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(string));
    
            var varToDateParameter = varToDate != null ?
                new ObjectParameter("varToDate", varToDate) :
                new ObjectParameter("varToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSBillingStockMovement", customerIDParameter, varFromDateParameter, varToDateParameter);
        }
    
        public virtual int SP_DSBillingSummaryInsert(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSBillingSummaryInsert", fromDateParameter, todateParameter);
        }
    
        public virtual ObjectResult<SP_DSCartonByhight_Aisle_Result> SP_DSCartonByhight_Aisle(Nullable<int> flag, Nullable<int> high, Nullable<int> aisle)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(int));
    
            var highParameter = high.HasValue ?
                new ObjectParameter("High", high) :
                new ObjectParameter("High", typeof(int));
    
            var aisleParameter = aisle.HasValue ?
                new ObjectParameter("Aisle", aisle) :
                new ObjectParameter("Aisle", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSCartonByhight_Aisle_Result>("SP_DSCartonByhight_Aisle", flagParameter, highParameter, aisleParameter);
        }
    
        public virtual ObjectResult<SP_DSCartonDestructionByCustomer_Result> SP_DSCartonDestructionByCustomer(Nullable<int> dSCustomerID)
        {
            var dSCustomerIDParameter = dSCustomerID.HasValue ?
                new ObjectParameter("DSCustomerID", dSCustomerID) :
                new ObjectParameter("DSCustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSCartonDestructionByCustomer_Result>("SP_DSCartonDestructionByCustomer", dSCustomerIDParameter);
        }
    
        public virtual ObjectResult<SP_DSCartonInfo_Carton_Result> SP_DSCartonInfo_Carton(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSCartonInfo_Carton_Result>("SP_DSCartonInfo_Carton", customerIDParameter);
        }
    
        public virtual ObjectResult<SP_DSCartonInfo_Carton_Location_Result> SP_DSCartonInfo_Carton_Location(Nullable<int> customerID, Nullable<int> locationID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSCartonInfo_Carton_Location_Result>("SP_DSCartonInfo_Carton_Location", customerIDParameter, locationIDParameter);
        }
    
        public virtual ObjectResult<SP_DSCartonInfo_CartonViewAll_Result> SP_DSCartonInfo_CartonViewAll(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSCartonInfo_CartonViewAll_Result>("SP_DSCartonInfo_CartonViewAll", customerIDParameter);
        }
    
        public virtual ObjectResult<SP_DSCartonInfo_details_Result> SP_DSCartonInfo_details(Nullable<int> cartonNewID)
        {
            var cartonNewIDParameter = cartonNewID.HasValue ?
                new ObjectParameter("CartonNewID", cartonNewID) :
                new ObjectParameter("CartonNewID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSCartonInfo_details_Result>("SP_DSCartonInfo_details", cartonNewIDParameter);
        }
    
        public virtual ObjectResult<SP_DSCartonInfo_DO_Result> SP_DSCartonInfo_DO(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSCartonInfo_DO_Result>("SP_DSCartonInfo_DO", customerIDParameter);
        }
    
        public virtual ObjectResult<SP_DSCartonInfo_Location_Result> SP_DSCartonInfo_Location(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSCartonInfo_Location_Result>("SP_DSCartonInfo_Location", customerIDParameter);
        }
    
        public virtual ObjectResult<SP_DSCartonInfo_Movement_Result> SP_DSCartonInfo_Movement(Nullable<int> cartonNewID)
        {
            var cartonNewIDParameter = cartonNewID.HasValue ?
                new ObjectParameter("CartonNewID", cartonNewID) :
                new ObjectParameter("CartonNewID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSCartonInfo_Movement_Result>("SP_DSCartonInfo_Movement", cartonNewIDParameter);
        }
    
        public virtual ObjectResult<SP_DSCartonInfo_Retrieval_Result> SP_DSCartonInfo_Retrieval(Nullable<int> dSCustomerID)
        {
            var dSCustomerIDParameter = dSCustomerID.HasValue ?
                new ObjectParameter("DSCustomerID", dSCustomerID) :
                new ObjectParameter("DSCustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSCartonInfo_Retrieval_Result>("SP_DSCartonInfo_Retrieval", dSCustomerIDParameter);
        }
    
        public virtual ObjectResult<SP_DSCartonInfo_RO_Result> SP_DSCartonInfo_RO(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSCartonInfo_RO_Result>("SP_DSCartonInfo_RO", customerIDParameter);
        }
    
        public virtual ObjectResult<SP_DSCartonLabelRemain_Result> SP_DSCartonLabelRemain(Nullable<int> dSDispatchingOrderID)
        {
            var dSDispatchingOrderIDParameter = dSDispatchingOrderID.HasValue ?
                new ObjectParameter("DSDispatchingOrderID", dSDispatchingOrderID) :
                new ObjectParameter("DSDispatchingOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSCartonLabelRemain_Result>("SP_DSCartonLabelRemain", dSDispatchingOrderIDParameter);
        }
    
        public virtual ObjectResult<SP_DSCartonLabelRemain_Created_Result> SP_DSCartonLabelRemain_Created()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSCartonLabelRemain_Created_Result>("SP_DSCartonLabelRemain_Created");
        }
    
        public virtual int SP_DSCartonMovementDeSelectAll(Nullable<int> locationID)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSCartonMovementDeSelectAll", locationIDParameter);
        }
    
        public virtual ObjectResult<SP_DSCartonMovementFrom_combo_Result> SP_DSCartonMovementFrom_combo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSCartonMovementFrom_combo_Result>("SP_DSCartonMovementFrom_combo");
        }
    
        public virtual ObjectResult<SP_DSCartonMovementLocationReview_Result> SP_DSCartonMovementLocationReview(string sourceLocation)
        {
            var sourceLocationParameter = sourceLocation != null ?
                new ObjectParameter("SourceLocation", sourceLocation) :
                new ObjectParameter("SourceLocation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSCartonMovementLocationReview_Result>("SP_DSCartonMovementLocationReview", sourceLocationParameter);
        }
    
        public virtual int SP_DSCartonMovementSelect(Nullable<int> locationID, Nullable<int> cartonNewID, Nullable<bool> flag)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var cartonNewIDParameter = cartonNewID.HasValue ?
                new ObjectParameter("CartonNewID", cartonNewID) :
                new ObjectParameter("CartonNewID", typeof(int));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSCartonMovementSelect", locationIDParameter, cartonNewIDParameter, flagParameter);
        }
    
        public virtual int SP_DSCartonMovementSelectAll(Nullable<int> locationID)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSCartonMovementSelectAll", locationIDParameter);
        }
    
        public virtual ObjectResult<SP_DSCartonMovementTo_Result> SP_DSCartonMovementTo(Nullable<int> locationID)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSCartonMovementTo_Result>("SP_DSCartonMovementTo", locationIDParameter);
        }
    
        public virtual ObjectResult<SP_DSCartonMovementViewDetails_Result> SP_DSCartonMovementViewDetails(Nullable<int> dSCartonMovementID)
        {
            var dSCartonMovementIDParameter = dSCartonMovementID.HasValue ?
                new ObjectParameter("DSCartonMovementID", dSCartonMovementID) :
                new ObjectParameter("DSCartonMovementID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSCartonMovementViewDetails_Result>("SP_DSCartonMovementViewDetails", dSCartonMovementIDParameter);
        }
    
        public virtual ObjectResult<SP_DSCartonProblemCheckRemain_Result> SP_DSCartonProblemCheckRemain()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSCartonProblemCheckRemain_Result>("SP_DSCartonProblemCheckRemain");
        }
    
        public virtual int SP_DSCartonSelect_Update()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSCartonSelect_Update");
        }
    
        public virtual int SP_DSCartonsNew_Import(Nullable<int> dSReceivingOrderID)
        {
            var dSReceivingOrderIDParameter = dSReceivingOrderID.HasValue ?
                new ObjectParameter("DSReceivingOrderID", dSReceivingOrderID) :
                new ObjectParameter("DSReceivingOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSCartonsNew_Import", dSReceivingOrderIDParameter);
        }
    
        public virtual int SP_DSCartonsNew_ImportNew(Nullable<int> dSReceivingOrderID)
        {
            var dSReceivingOrderIDParameter = dSReceivingOrderID.HasValue ?
                new ObjectParameter("DSReceivingOrderID", dSReceivingOrderID) :
                new ObjectParameter("DSReceivingOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSCartonsNew_ImportNew", dSReceivingOrderIDParameter);
        }
    
        public virtual int SP_DSCartonsNew_ImportTruncate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSCartonsNew_ImportTruncate");
        }
    
        public virtual int SP_DSCartonsNew_UpdateCustomerReference(Nullable<int> dSReceivingOrderID)
        {
            var dSReceivingOrderIDParameter = dSReceivingOrderID.HasValue ?
                new ObjectParameter("DSReceivingOrderID", dSReceivingOrderID) :
                new ObjectParameter("DSReceivingOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSCartonsNew_UpdateCustomerReference", dSReceivingOrderIDParameter);
        }
    
        public virtual int SP_DSCartonsNew_UpdateToOrders(Nullable<int> cartonNewID, Nullable<bool> flag, string updatedBy)
        {
            var cartonNewIDParameter = cartonNewID.HasValue ?
                new ObjectParameter("CartonNewID", cartonNewID) :
                new ObjectParameter("CartonNewID", typeof(int));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSCartonsNew_UpdateToOrders", cartonNewIDParameter, flagParameter, updatedByParameter);
        }
    
        public virtual int SP_DSCartonsNewDelete(Nullable<int> cartonNewID)
        {
            var cartonNewIDParameter = cartonNewID.HasValue ?
                new ObjectParameter("CartonNewID", cartonNewID) :
                new ObjectParameter("CartonNewID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSCartonsNewDelete", cartonNewIDParameter);
        }
    
        public virtual ObjectResult<SP_DSCartonStockInStoreAll_Result> SP_DSCartonStockInStoreAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSCartonStockInStoreAll_Result>("SP_DSCartonStockInStoreAll");
        }
    
        public virtual ObjectResult<SP_DScomboContracts_Result> SP_DScomboContracts(Nullable<int> customerID, string orderType)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DScomboContracts_Result>("SP_DScomboContracts", customerIDParameter, orderTypeParameter);
        }
    
        public virtual ObjectResult<SP_DSComboCustomerID_Result> SP_DSComboCustomerID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSComboCustomerID_Result>("SP_DSComboCustomerID");
        }
    
        public virtual ObjectResult<SP_DSComboDOCarton_Result> SP_DSComboDOCarton(Nullable<int> dSCustomerID, Nullable<int> flag)
        {
            var dSCustomerIDParameter = dSCustomerID.HasValue ?
                new ObjectParameter("DSCustomerID", dSCustomerID) :
                new ObjectParameter("DSCustomerID", typeof(int));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSComboDOCarton_Result>("SP_DSComboDOCarton", dSCustomerIDParameter, flagParameter);
        }
    
        public virtual ObjectResult<SP_DSComboDOCartonByCriteria_Result> SP_DSComboDOCartonByCriteria(Nullable<int> dSCustomerID, string criteria)
        {
            var dSCustomerIDParameter = dSCustomerID.HasValue ?
                new ObjectParameter("DSCustomerID", dSCustomerID) :
                new ObjectParameter("DSCustomerID", typeof(int));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSComboDOCartonByCriteria_Result>("SP_DSComboDOCartonByCriteria", dSCustomerIDParameter, criteriaParameter);
        }
    
        public virtual ObjectResult<SP_DScomboROCartonID_Result> SP_DScomboROCartonID(Nullable<int> customerID, string orderType)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DScomboROCartonID_Result>("SP_DScomboROCartonID", customerIDParameter, orderTypeParameter);
        }
    
        public virtual int SP_DSCreateNewCarton(Nullable<int> customerID, Nullable<int> qtyCarton, Nullable<int> dSReceivingOrderID, string createdBy)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var qtyCartonParameter = qtyCarton.HasValue ?
                new ObjectParameter("QtyCarton", qtyCarton) :
                new ObjectParameter("QtyCarton", typeof(int));
    
            var dSReceivingOrderIDParameter = dSReceivingOrderID.HasValue ?
                new ObjectParameter("DSReceivingOrderID", dSReceivingOrderID) :
                new ObjectParameter("DSReceivingOrderID", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSCreateNewCarton", customerIDParameter, qtyCartonParameter, dSReceivingOrderIDParameter, createdByParameter);
        }
    
        public virtual ObjectResult<SP_DSCustomer_Result> SP_DSCustomer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSCustomer_Result>("SP_DSCustomer");
        }
    
        public virtual int SP_DSCustomerProductGroupInsertNew(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSCustomerProductGroupInsertNew", customerIDParameter);
        }
    
        public virtual ObjectResult<SP_DSDDCartonBarcode_Result> SP_DSDDCartonBarcode(Nullable<int> dSDispatchingOrdersID)
        {
            var dSDispatchingOrdersIDParameter = dSDispatchingOrdersID.HasValue ?
                new ObjectParameter("DSDispatchingOrdersID", dSDispatchingOrdersID) :
                new ObjectParameter("DSDispatchingOrdersID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSDDCartonBarcode_Result>("SP_DSDDCartonBarcode", dSDispatchingOrdersIDParameter);
        }
    
        public virtual ObjectResult<SP_DSDispatchingNote_Result> SP_DSDispatchingNote(Nullable<int> dSDOID)
        {
            var dSDOIDParameter = dSDOID.HasValue ?
                new ObjectParameter("DSDOID", dSDOID) :
                new ObjectParameter("DSDOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSDispatchingNote_Result>("SP_DSDispatchingNote", dSDOIDParameter);
        }
    
        public virtual ObjectResult<SP_DSDispatchingOrderCreate_Result> SP_DSDispatchingOrderCreate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSDispatchingOrderCreate_Result>("SP_DSDispatchingOrderCreate");
        }
    
        public virtual int SP_DSDispatchingOrderCreateByCustomerInsert(string dSOwner, string varLocationIDString, string varCustomerIDString)
        {
            var dSOwnerParameter = dSOwner != null ?
                new ObjectParameter("DSOwner", dSOwner) :
                new ObjectParameter("DSOwner", typeof(string));
    
            var varLocationIDStringParameter = varLocationIDString != null ?
                new ObjectParameter("varLocationIDString", varLocationIDString) :
                new ObjectParameter("varLocationIDString", typeof(string));
    
            var varCustomerIDStringParameter = varCustomerIDString != null ?
                new ObjectParameter("varCustomerIDString", varCustomerIDString) :
                new ObjectParameter("varCustomerIDString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSDispatchingOrderCreateByCustomerInsert", dSOwnerParameter, varLocationIDStringParameter, varCustomerIDStringParameter);
        }
    
        public virtual ObjectResult<SP_DSDispatchingOrderCreateByHigh_Result> SP_DSDispatchingOrderCreateByHigh()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSDispatchingOrderCreateByHigh_Result>("SP_DSDispatchingOrderCreateByHigh");
        }
    
        public virtual int SP_DSDispatchingOrderCreateByLocationInsert(string dSOwner, string varLocationIDString, string varCustomerIDString)
        {
            var dSOwnerParameter = dSOwner != null ?
                new ObjectParameter("DSOwner", dSOwner) :
                new ObjectParameter("DSOwner", typeof(string));
    
            var varLocationIDStringParameter = varLocationIDString != null ?
                new ObjectParameter("varLocationIDString", varLocationIDString) :
                new ObjectParameter("varLocationIDString", typeof(string));
    
            var varCustomerIDStringParameter = varCustomerIDString != null ?
                new ObjectParameter("varCustomerIDString", varCustomerIDString) :
                new ObjectParameter("varCustomerIDString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSDispatchingOrderCreateByLocationInsert", dSOwnerParameter, varLocationIDStringParameter, varCustomerIDStringParameter);
        }
    
        public virtual ObjectResult<SP_DSDispatchingOrderDetailsCreate_Result> SP_DSDispatchingOrderDetailsCreate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSDispatchingOrderDetailsCreate_Result>("SP_DSDispatchingOrderDetailsCreate");
        }
    
        public virtual int SP_DSDispatchingOrderDetailsCreateInsert(string varLocationIDString)
        {
            var varLocationIDStringParameter = varLocationIDString != null ?
                new ObjectParameter("varLocationIDString", varLocationIDString) :
                new ObjectParameter("varLocationIDString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSDispatchingOrderDetailsCreateInsert", varLocationIDStringParameter);
        }
    
        public virtual ObjectResult<SP_DSDispatchingOrdersCreateReport_Result> SP_DSDispatchingOrdersCreateReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSDispatchingOrdersCreateReport_Result>("SP_DSDispatchingOrdersCreateReport");
        }
    
        public virtual int SP_DSDOCartonByLocationInsert(Nullable<int> dSDOID, Nullable<int> locationID)
        {
            var dSDOIDParameter = dSDOID.HasValue ?
                new ObjectParameter("DSDOID", dSDOID) :
                new ObjectParameter("DSDOID", typeof(int));
    
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSDOCartonByLocationInsert", dSDOIDParameter, locationIDParameter);
        }
    
        public virtual int SP_DSDOCartonByLocationSelect(Nullable<int> dSCustomerID, Nullable<int> locationID, Nullable<bool> status)
        {
            var dSCustomerIDParameter = dSCustomerID.HasValue ?
                new ObjectParameter("DSCustomerID", dSCustomerID) :
                new ObjectParameter("DSCustomerID", typeof(int));
    
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSDOCartonByLocationSelect", dSCustomerIDParameter, locationIDParameter, statusParameter);
        }
    
        public virtual int SP_DSDOCartonDelete(Nullable<int> cartonID, Nullable<int> dispatchedCartonID)
        {
            var cartonIDParameter = cartonID.HasValue ?
                new ObjectParameter("CartonID", cartonID) :
                new ObjectParameter("CartonID", typeof(int));
    
            var dispatchedCartonIDParameter = dispatchedCartonID.HasValue ?
                new ObjectParameter("DispatchedCartonID", dispatchedCartonID) :
                new ObjectParameter("DispatchedCartonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSDOCartonDelete", cartonIDParameter, dispatchedCartonIDParameter);
        }
    
        public virtual int SP_DSDOCartonInsert(Nullable<int> dSDOID, Nullable<int> cartonID)
        {
            var dSDOIDParameter = dSDOID.HasValue ?
                new ObjectParameter("DSDOID", dSDOID) :
                new ObjectParameter("DSDOID", typeof(int));
    
            var cartonIDParameter = cartonID.HasValue ?
                new ObjectParameter("CartonID", cartonID) :
                new ObjectParameter("CartonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSDOCartonInsert", dSDOIDParameter, cartonIDParameter);
        }
    
        public virtual int SP_DSDOCartonsAccept(Nullable<int> dSDOID, Nullable<bool> status, string userID, Nullable<int> dispatchedCartonID)
        {
            var dSDOIDParameter = dSDOID.HasValue ?
                new ObjectParameter("DSDOID", dSDOID) :
                new ObjectParameter("DSDOID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var dispatchedCartonIDParameter = dispatchedCartonID.HasValue ?
                new ObjectParameter("DispatchedCartonID", dispatchedCartonID) :
                new ObjectParameter("DispatchedCartonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSDOCartonsAccept", dSDOIDParameter, statusParameter, userIDParameter, dispatchedCartonIDParameter);
        }
    
        public virtual int SP_DSDOCartonsConfirm(Nullable<int> dSDOID, Nullable<bool> status, string userID, Nullable<int> dispatchedCartonID)
        {
            var dSDOIDParameter = dSDOID.HasValue ?
                new ObjectParameter("DSDOID", dSDOID) :
                new ObjectParameter("DSDOID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var dispatchedCartonIDParameter = dispatchedCartonID.HasValue ?
                new ObjectParameter("DispatchedCartonID", dispatchedCartonID) :
                new ObjectParameter("DispatchedCartonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSDOCartonsConfirm", dSDOIDParameter, statusParameter, userIDParameter, dispatchedCartonIDParameter);
        }
    
        public virtual int SP_DSDOCartonSelectAll(Nullable<int> dSCustomerID, Nullable<bool> status)
        {
            var dSCustomerIDParameter = dSCustomerID.HasValue ?
                new ObjectParameter("DSCustomerID", dSCustomerID) :
                new ObjectParameter("DSCustomerID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSDOCartonSelectAll", dSCustomerIDParameter, statusParameter);
        }
    
        public virtual int SP_DSDOCartonSelectInsert(Nullable<int> dSDOID, Nullable<int> dSCustomerID, string userID)
        {
            var dSDOIDParameter = dSDOID.HasValue ?
                new ObjectParameter("DSDOID", dSDOID) :
                new ObjectParameter("DSDOID", typeof(int));
    
            var dSCustomerIDParameter = dSCustomerID.HasValue ?
                new ObjectParameter("DSCustomerID", dSCustomerID) :
                new ObjectParameter("DSCustomerID", typeof(int));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSDOCartonSelectInsert", dSDOIDParameter, dSCustomerIDParameter, userIDParameter);
        }
    
        public virtual int SP_DSDODeleteCartonSelect(Nullable<int> dSDOID, string user)
        {
            var dSDOIDParameter = dSDOID.HasValue ?
                new ObjectParameter("DSDOID", dSDOID) :
                new ObjectParameter("DSDOID", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSDODeleteCartonSelect", dSDOIDParameter, userParameter);
        }
    
        public virtual int SP_DSDOOrderDelete(Nullable<int> dSDispatchingOrderID)
        {
            var dSDispatchingOrderIDParameter = dSDispatchingOrderID.HasValue ?
                new ObjectParameter("DSDispatchingOrderID", dSDispatchingOrderID) :
                new ObjectParameter("DSDispatchingOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSDOOrderDelete", dSDispatchingOrderIDParameter);
        }
    
        public virtual int SP_DSDOSelectOneCarton(Nullable<int> cartonNewID, Nullable<bool> status)
        {
            var cartonNewIDParameter = cartonNewID.HasValue ?
                new ObjectParameter("CartonNewID", cartonNewID) :
                new ObjectParameter("CartonNewID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSDOSelectOneCarton", cartonNewIDParameter, statusParameter);
        }
    
        public virtual int SP_DSDOUpdateSelectAll(Nullable<int> dSDOID, Nullable<bool> flag)
        {
            var dSDOIDParameter = dSDOID.HasValue ?
                new ObjectParameter("DSDOID", dSDOID) :
                new ObjectParameter("DSDOID", typeof(int));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSDOUpdateSelectAll", dSDOIDParameter, flagParameter);
        }
    
        public virtual int SP_DSDOUpdateSelectOne(Nullable<int> dispatchedCartonID, Nullable<bool> flag)
        {
            var dispatchedCartonIDParameter = dispatchedCartonID.HasValue ?
                new ObjectParameter("DispatchedCartonID", dispatchedCartonID) :
                new ObjectParameter("DispatchedCartonID", typeof(int));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSDOUpdateSelectOne", dispatchedCartonIDParameter, flagParameter);
        }
    
        public virtual int SP_DSEmployeeWorkingDelete(Nullable<int> employeeWorkingID)
        {
            var employeeWorkingIDParameter = employeeWorkingID.HasValue ?
                new ObjectParameter("EmployeeWorkingID", employeeWorkingID) :
                new ObjectParameter("EmployeeWorkingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSEmployeeWorkingDelete", employeeWorkingIDParameter);
        }
    
        public virtual ObjectResult<SP_DSFindCartons_ByLocation_Result> SP_DSFindCartons_ByLocation(Nullable<int> locationID)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSFindCartons_ByLocation_Result>("SP_DSFindCartons_ByLocation", locationIDParameter);
        }
    
        public virtual ObjectResult<SP_DSInOutView_D_Result> SP_DSInOutView_D(Nullable<int> customerID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSInOutView_D_Result>("SP_DSInOutView_D", customerIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SP_DSInOutView_DALL_Result> SP_DSInOutView_DALL(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSInOutView_DALL_Result>("SP_DSInOutView_DALL", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SP_DSInOutView_DALL_SortByDate_Result> SP_DSInOutView_DALL_SortByDate(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<bool> flag)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSInOutView_DALL_SortByDate_Result>("SP_DSInOutView_DALL_SortByDate", fromDateParameter, toDateParameter, flagParameter);
        }
    
        public virtual ObjectResult<SP_DSInOutview_R_Result> SP_DSInOutview_R(Nullable<int> customerID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSInOutview_R_Result>("SP_DSInOutview_R", customerIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SP_DSInOutview_RALL_Result> SP_DSInOutview_RALL(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSInOutview_RALL_Result>("SP_DSInOutview_RALL", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SP_DSInOutview_RALL_SortByDate_Result> SP_DSInOutview_RALL_SortByDate(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<bool> flag)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSInOutview_RALL_SortByDate_Result>("SP_DSInOutview_RALL_SortByDate", fromDateParameter, toDateParameter, flagParameter);
        }
    
        public virtual ObjectResult<SP_DSLabel_Result> SP_DSLabel(Nullable<int> dSReceivingOrderID)
        {
            var dSReceivingOrderIDParameter = dSReceivingOrderID.HasValue ?
                new ObjectParameter("DSReceivingOrderID", dSReceivingOrderID) :
                new ObjectParameter("DSReceivingOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSLabel_Result>("SP_DSLabel", dSReceivingOrderIDParameter);
        }
    
        public virtual ObjectResult<SP_DSLabelA5StockLocationByHight_Result> SP_DSLabelA5StockLocationByHight(Nullable<int> customerID, Nullable<int> flag)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSLabelA5StockLocationByHight_Result>("SP_DSLabelA5StockLocationByHight", customerIDParameter, flagParameter);
        }
    
        public virtual ObjectResult<SP_DSLabelCartonMovementTo_Result> SP_DSLabelCartonMovementTo(Nullable<int> locationID)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSLabelCartonMovementTo_Result>("SP_DSLabelCartonMovementTo", locationIDParameter);
        }
    
        public virtual ObjectResult<SP_DSLabelCartonMovementToByHight_Result> SP_DSLabelCartonMovementToByHight(string locationNumber)
        {
            var locationNumberParameter = locationNumber != null ?
                new ObjectParameter("LocationNumber", locationNumber) :
                new ObjectParameter("LocationNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSLabelCartonMovementToByHight_Result>("SP_DSLabelCartonMovementToByHight", locationNumberParameter);
        }
    
        public virtual ObjectResult<SP_DSLabelRemainRD_Result> SP_DSLabelRemainRD(Nullable<int> dSReceivingOrderID)
        {
            var dSReceivingOrderIDParameter = dSReceivingOrderID.HasValue ?
                new ObjectParameter("DSReceivingOrderID", dSReceivingOrderID) :
                new ObjectParameter("DSReceivingOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSLabelRemainRD_Result>("SP_DSLabelRemainRD", dSReceivingOrderIDParameter);
        }
    
        public virtual ObjectResult<SP_DSLocationBarcode_Result> SP_DSLocationBarcode(Nullable<int> flag, Nullable<int> high, Nullable<int> aisle)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(int));
    
            var highParameter = high.HasValue ?
                new ObjectParameter("High", high) :
                new ObjectParameter("High", typeof(int));
    
            var aisleParameter = aisle.HasValue ?
                new ObjectParameter("Aisle", aisle) :
                new ObjectParameter("Aisle", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSLocationBarcode_Result>("SP_DSLocationBarcode", flagParameter, highParameter, aisleParameter);
        }
    
        public virtual ObjectResult<SP_DSLocationBarcode_buuTest_Result> SP_DSLocationBarcode_buuTest()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSLocationBarcode_buuTest_Result>("SP_DSLocationBarcode_buuTest");
        }
    
        public virtual int SP_DSLocationInsert(string roomID, Nullable<int> aisle, Nullable<int> fromBay, Nullable<int> toBay, Nullable<int> fromHigh, Nullable<int> toHigh, Nullable<int> fromDeep, Nullable<int> toDeep)
        {
            var roomIDParameter = roomID != null ?
                new ObjectParameter("RoomID", roomID) :
                new ObjectParameter("RoomID", typeof(string));
    
            var aisleParameter = aisle.HasValue ?
                new ObjectParameter("Aisle", aisle) :
                new ObjectParameter("Aisle", typeof(int));
    
            var fromBayParameter = fromBay.HasValue ?
                new ObjectParameter("FromBay", fromBay) :
                new ObjectParameter("FromBay", typeof(int));
    
            var toBayParameter = toBay.HasValue ?
                new ObjectParameter("ToBay", toBay) :
                new ObjectParameter("ToBay", typeof(int));
    
            var fromHighParameter = fromHigh.HasValue ?
                new ObjectParameter("FromHigh", fromHigh) :
                new ObjectParameter("FromHigh", typeof(int));
    
            var toHighParameter = toHigh.HasValue ?
                new ObjectParameter("ToHigh", toHigh) :
                new ObjectParameter("ToHigh", typeof(int));
    
            var fromDeepParameter = fromDeep.HasValue ?
                new ObjectParameter("FromDeep", fromDeep) :
                new ObjectParameter("FromDeep", typeof(int));
    
            var toDeepParameter = toDeep.HasValue ?
                new ObjectParameter("ToDeep", toDeep) :
                new ObjectParameter("ToDeep", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSLocationInsert", roomIDParameter, aisleParameter, fromBayParameter, toBayParameter, fromHighParameter, toHighParameter, fromDeepParameter, toDeepParameter);
        }
    
        public virtual ObjectResult<SP_DSLocationsAll_Result> SP_DSLocationsAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSLocationsAll_Result>("SP_DSLocationsAll");
        }
    
        public virtual ObjectResult<SP_DSLocationsBusy_Result> SP_DSLocationsBusy()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSLocationsBusy_Result>("SP_DSLocationsBusy");
        }
    
        public virtual ObjectResult<SP_DSLocationsFree_Result> SP_DSLocationsFree()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSLocationsFree_Result>("SP_DSLocationsFree");
        }
    
        public virtual ObjectResult<SP_DSLocationsFree_TEST_Result> SP_DSLocationsFree_TEST(string locationNumber)
        {
            var locationNumberParameter = locationNumber != null ?
                new ObjectParameter("LocationNumber", locationNumber) :
                new ObjectParameter("LocationNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSLocationsFree_TEST_Result>("SP_DSLocationsFree_TEST", locationNumberParameter);
        }
    
        public virtual int SP_DSMovementCartonUpdate(Nullable<int> varSourceLocationID, Nullable<int> varDestinationLocationID, string varDestinationLocationNumber, string user)
        {
            var varSourceLocationIDParameter = varSourceLocationID.HasValue ?
                new ObjectParameter("varSourceLocationID", varSourceLocationID) :
                new ObjectParameter("varSourceLocationID", typeof(int));
    
            var varDestinationLocationIDParameter = varDestinationLocationID.HasValue ?
                new ObjectParameter("varDestinationLocationID", varDestinationLocationID) :
                new ObjectParameter("varDestinationLocationID", typeof(int));
    
            var varDestinationLocationNumberParameter = varDestinationLocationNumber != null ?
                new ObjectParameter("varDestinationLocationNumber", varDestinationLocationNumber) :
                new ObjectParameter("varDestinationLocationNumber", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSMovementCartonUpdate", varSourceLocationIDParameter, varDestinationLocationIDParameter, varDestinationLocationNumberParameter, userParameter);
        }
    
        public virtual int SP_DSMovementCartonUpdateByCarton(Nullable<int> varCartonID, Nullable<int> varDestinationLocationID, string varDestinationLocationNumber)
        {
            var varCartonIDParameter = varCartonID.HasValue ?
                new ObjectParameter("varCartonID", varCartonID) :
                new ObjectParameter("varCartonID", typeof(int));
    
            var varDestinationLocationIDParameter = varDestinationLocationID.HasValue ?
                new ObjectParameter("varDestinationLocationID", varDestinationLocationID) :
                new ObjectParameter("varDestinationLocationID", typeof(int));
    
            var varDestinationLocationNumberParameter = varDestinationLocationNumber != null ?
                new ObjectParameter("varDestinationLocationNumber", varDestinationLocationNumber) :
                new ObjectParameter("varDestinationLocationNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSMovementCartonUpdateByCarton", varCartonIDParameter, varDestinationLocationIDParameter, varDestinationLocationNumberParameter);
        }
    
        public virtual int SP_DSMovementLocation(string varSourceLocationNumber, Nullable<int> varSourceLocationID, string varDestinationLocationNumber, Nullable<int> varEmployeeID, string varUser)
        {
            var varSourceLocationNumberParameter = varSourceLocationNumber != null ?
                new ObjectParameter("varSourceLocationNumber", varSourceLocationNumber) :
                new ObjectParameter("varSourceLocationNumber", typeof(string));
    
            var varSourceLocationIDParameter = varSourceLocationID.HasValue ?
                new ObjectParameter("varSourceLocationID", varSourceLocationID) :
                new ObjectParameter("varSourceLocationID", typeof(int));
    
            var varDestinationLocationNumberParameter = varDestinationLocationNumber != null ?
                new ObjectParameter("varDestinationLocationNumber", varDestinationLocationNumber) :
                new ObjectParameter("varDestinationLocationNumber", typeof(string));
    
            var varEmployeeIDParameter = varEmployeeID.HasValue ?
                new ObjectParameter("varEmployeeID", varEmployeeID) :
                new ObjectParameter("varEmployeeID", typeof(int));
    
            var varUserParameter = varUser != null ?
                new ObjectParameter("varUser", varUser) :
                new ObjectParameter("varUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSMovementLocation", varSourceLocationNumberParameter, varSourceLocationIDParameter, varDestinationLocationNumberParameter, varEmployeeIDParameter, varUserParameter);
        }
    
        public virtual int SP_DSMovementLocationByCarton(string varSourceLocationNumber, Nullable<int> varSourceLocationID, string varDestinationLocationNumber, Nullable<int> varEmployeeID, string varUser, Nullable<int> varCartonID)
        {
            var varSourceLocationNumberParameter = varSourceLocationNumber != null ?
                new ObjectParameter("varSourceLocationNumber", varSourceLocationNumber) :
                new ObjectParameter("varSourceLocationNumber", typeof(string));
    
            var varSourceLocationIDParameter = varSourceLocationID.HasValue ?
                new ObjectParameter("varSourceLocationID", varSourceLocationID) :
                new ObjectParameter("varSourceLocationID", typeof(int));
    
            var varDestinationLocationNumberParameter = varDestinationLocationNumber != null ?
                new ObjectParameter("varDestinationLocationNumber", varDestinationLocationNumber) :
                new ObjectParameter("varDestinationLocationNumber", typeof(string));
    
            var varEmployeeIDParameter = varEmployeeID.HasValue ?
                new ObjectParameter("varEmployeeID", varEmployeeID) :
                new ObjectParameter("varEmployeeID", typeof(int));
    
            var varUserParameter = varUser != null ?
                new ObjectParameter("varUser", varUser) :
                new ObjectParameter("varUser", typeof(string));
    
            var varCartonIDParameter = varCartonID.HasValue ?
                new ObjectParameter("varCartonID", varCartonID) :
                new ObjectParameter("varCartonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSMovementLocationByCarton", varSourceLocationNumberParameter, varSourceLocationIDParameter, varDestinationLocationNumberParameter, varEmployeeIDParameter, varUserParameter, varCartonIDParameter);
        }
    
        public virtual ObjectResult<SP_DSOrdersUnConfirms_Result> SP_DSOrdersUnConfirms(string dSOwner)
        {
            var dSOwnerParameter = dSOwner != null ?
                new ObjectParameter("DSOwner", dSOwner) :
                new ObjectParameter("DSOwner", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSOrdersUnConfirms_Result>("SP_DSOrdersUnConfirms", dSOwnerParameter);
        }
    
        public virtual ObjectResult<SP_DSOrdersUnConfirmsAll_Result> SP_DSOrdersUnConfirmsAll(Nullable<bool> flag)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSOrdersUnConfirmsAll_Result>("SP_DSOrdersUnConfirmsAll", flagParameter);
        }
    
        public virtual int SP_DSOrdersUnConfirmUpdate(string owner)
        {
            var ownerParameter = owner != null ?
                new ObjectParameter("Owner", owner) :
                new ObjectParameter("Owner", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSOrdersUnConfirmUpdate", ownerParameter);
        }
    
        public virtual int SP_DSOtherServiceInsert(Nullable<int> customerID, Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varToDate, Nullable<int> varEmployeeID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));
    
            var varToDateParameter = varToDate.HasValue ?
                new ObjectParameter("varToDate", varToDate) :
                new ObjectParameter("varToDate", typeof(System.DateTime));
    
            var varEmployeeIDParameter = varEmployeeID.HasValue ?
                new ObjectParameter("varEmployeeID", varEmployeeID) :
                new ObjectParameter("varEmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSOtherServiceInsert", customerIDParameter, varFromDateParameter, varToDateParameter, varEmployeeIDParameter);
        }
    
        public virtual int SP_DSRDCartonsNew_Import(string orderType, string userID)
        {
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSRDCartonsNew_Import", orderTypeParameter, userIDParameter);
        }
    
        public virtual ObjectResult<SP_DSReceivingAdvice_Note_Result> SP_DSReceivingAdvice_Note(Nullable<int> dSROID)
        {
            var dSROIDParameter = dSROID.HasValue ?
                new ObjectParameter("DSROID", dSROID) :
                new ObjectParameter("DSROID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSReceivingAdvice_Note_Result>("SP_DSReceivingAdvice_Note", dSROIDParameter);
        }
    
        public virtual ObjectResult<SP_DSReceivingCartonNewBarcode_Result> SP_DSReceivingCartonNewBarcode(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSReceivingCartonNewBarcode_Result>("SP_DSReceivingCartonNewBarcode", customerIDParameter);
        }
    
        public virtual ObjectResult<SP_DSReceivingOrders_NotConfirm_Result> SP_DSReceivingOrders_NotConfirm()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSReceivingOrders_NotConfirm_Result>("SP_DSReceivingOrders_NotConfirm");
        }
    
        public virtual int SP_DSROAllCartonsNonAllocateToOneLocation(Nullable<int> varLocationID, Nullable<int> varDSROID, string varLocationNumber)
        {
            var varLocationIDParameter = varLocationID.HasValue ?
                new ObjectParameter("varLocationID", varLocationID) :
                new ObjectParameter("varLocationID", typeof(int));
    
            var varDSROIDParameter = varDSROID.HasValue ?
                new ObjectParameter("varDSROID", varDSROID) :
                new ObjectParameter("varDSROID", typeof(int));
    
            var varLocationNumberParameter = varLocationNumber != null ?
                new ObjectParameter("varLocationNumber", varLocationNumber) :
                new ObjectParameter("varLocationNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSROAllCartonsNonAllocateToOneLocation", varLocationIDParameter, varDSROIDParameter, varLocationNumberParameter);
        }
    
        public virtual int SP_DSROAllCartonsToOneLocation(Nullable<int> varLocationID, Nullable<int> varDSROID, string varLocationNumber)
        {
            var varLocationIDParameter = varLocationID.HasValue ?
                new ObjectParameter("varLocationID", varLocationID) :
                new ObjectParameter("varLocationID", typeof(int));
    
            var varDSROIDParameter = varDSROID.HasValue ?
                new ObjectParameter("varDSROID", varDSROID) :
                new ObjectParameter("varDSROID", typeof(int));
    
            var varLocationNumberParameter = varLocationNumber != null ?
                new ObjectParameter("varLocationNumber", varLocationNumber) :
                new ObjectParameter("varLocationNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSROAllCartonsToOneLocation", varLocationIDParameter, varDSROIDParameter, varLocationNumberParameter);
        }
    
        public virtual ObjectResult<SP_DSROCartonBarcode_Result> SP_DSROCartonBarcode(Nullable<int> dSReceivingOrderID, Nullable<bool> flag)
        {
            var dSReceivingOrderIDParameter = dSReceivingOrderID.HasValue ?
                new ObjectParameter("DSReceivingOrderID", dSReceivingOrderID) :
                new ObjectParameter("DSReceivingOrderID", typeof(int));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSROCartonBarcode_Result>("SP_DSROCartonBarcode", dSReceivingOrderIDParameter, flagParameter);
        }
    
        public virtual int SP_DSROCartonCancelAllocatedLocation(Nullable<int> varDSROID, string userControl)
        {
            var varDSROIDParameter = varDSROID.HasValue ?
                new ObjectParameter("varDSROID", varDSROID) :
                new ObjectParameter("varDSROID", typeof(int));
    
            var userControlParameter = userControl != null ?
                new ObjectParameter("UserControl", userControl) :
                new ObjectParameter("UserControl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSROCartonCancelAllocatedLocation", varDSROIDParameter, userControlParameter);
        }
    
        public virtual int SP_DSROCartonCheckAllDelete(Nullable<int> dSROID, Nullable<bool> flag)
        {
            var dSROIDParameter = dSROID.HasValue ?
                new ObjectParameter("DSROID", dSROID) :
                new ObjectParameter("DSROID", typeof(int));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSROCartonCheckAllDelete", dSROIDParameter, flagParameter);
        }
    
        public virtual int SP_DSROCartonsAccept(Nullable<int> dSROID, Nullable<bool> status, string userID, Nullable<int> cartonID)
        {
            var dSROIDParameter = dSROID.HasValue ?
                new ObjectParameter("DSROID", dSROID) :
                new ObjectParameter("DSROID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var cartonIDParameter = cartonID.HasValue ?
                new ObjectParameter("CartonID", cartonID) :
                new ObjectParameter("CartonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSROCartonsAccept", dSROIDParameter, statusParameter, userIDParameter, cartonIDParameter);
        }
    
        public virtual int SP_DSROCartonsAllSelectInsert(Nullable<int> customerID, Nullable<int> dSROID, string orderType, string userID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var dSROIDParameter = dSROID.HasValue ?
                new ObjectParameter("DSROID", dSROID) :
                new ObjectParameter("DSROID", typeof(int));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSROCartonsAllSelectInsert", customerIDParameter, dSROIDParameter, orderTypeParameter, userIDParameter);
        }
    
        public virtual int SP_DSROCartonsConfirm(Nullable<int> dSROID, Nullable<bool> status, string userID, Nullable<int> cartonID)
        {
            var dSROIDParameter = dSROID.HasValue ?
                new ObjectParameter("DSROID", dSROID) :
                new ObjectParameter("DSROID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var cartonIDParameter = cartonID.HasValue ?
                new ObjectParameter("CartonID", cartonID) :
                new ObjectParameter("CartonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSROCartonsConfirm", dSROIDParameter, statusParameter, userIDParameter, cartonIDParameter);
        }
    
        public virtual int SP_DSROCartonsDelete(Nullable<int> dSROID, string user)
        {
            var dSROIDParameter = dSROID.HasValue ?
                new ObjectParameter("DSROID", dSROID) :
                new ObjectParameter("DSROID", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSROCartonsDelete", dSROIDParameter, userParameter);
        }
    
        public virtual int SP_DSROCartonSelectOne(Nullable<int> cartonNewID, Nullable<bool> status)
        {
            var cartonNewIDParameter = cartonNewID.HasValue ?
                new ObjectParameter("CartonNewID", cartonNewID) :
                new ObjectParameter("CartonNewID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSROCartonSelectOne", cartonNewIDParameter, statusParameter);
        }
    
        public virtual int SP_DSROCartonsExportToRDInsert(Nullable<int> dSDOID, string owner, Nullable<bool> flag)
        {
            var dSDOIDParameter = dSDOID.HasValue ?
                new ObjectParameter("DSDOID", dSDOID) :
                new ObjectParameter("DSDOID", typeof(int));
    
            var ownerParameter = owner != null ?
                new ObjectParameter("Owner", owner) :
                new ObjectParameter("Owner", typeof(string));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSROCartonsExportToRDInsert", dSDOIDParameter, ownerParameter, flagParameter);
        }
    
        public virtual int SP_DSROCartonsSelectAllCreateUpdate_CURSOR(Nullable<int> customerID, Nullable<int> varROID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var varROIDParameter = varROID.HasValue ?
                new ObjectParameter("varROID", varROID) :
                new ObjectParameter("varROID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSROCartonsSelectAllCreateUpdate_CURSOR", customerIDParameter, varROIDParameter);
        }
    
        public virtual int SP_DSROCartonsSelectAllInsert(Nullable<int> customerID, Nullable<int> dSROID, Nullable<int> cartonID, string orderType)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var dSROIDParameter = dSROID.HasValue ?
                new ObjectParameter("DSROID", dSROID) :
                new ObjectParameter("DSROID", typeof(int));
    
            var cartonIDParameter = cartonID.HasValue ?
                new ObjectParameter("CartonID", cartonID) :
                new ObjectParameter("CartonID", typeof(int));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSROCartonsSelectAllInsert", customerIDParameter, dSROIDParameter, cartonIDParameter, orderTypeParameter);
        }
    
        public virtual int SP_DSROCartonStockSelectOne(Nullable<int> customerID, Nullable<bool> status)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSROCartonStockSelectOne", customerIDParameter, statusParameter);
        }
    
        public virtual int SP_DSROCartonUpdateAll(Nullable<int> customerID, string orderType, Nullable<bool> flag)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSROCartonUpdateAll", customerIDParameter, orderTypeParameter, flagParameter);
        }
    
        public virtual ObjectResult<SP_DSROComBoCarton_Result> SP_DSROComBoCarton(Nullable<int> customerID, string orderType, Nullable<int> flag)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSROComBoCarton_Result>("SP_DSROComBoCarton", customerIDParameter, orderTypeParameter, flagParameter);
        }
    
        public virtual int SP_DSRONewCartonInsert(Nullable<int> dSROID, ObjectParameter cartonID)
        {
            var dSROIDParameter = dSROID.HasValue ?
                new ObjectParameter("DSROID", dSROID) :
                new ObjectParameter("DSROID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSRONewCartonInsert", dSROIDParameter, cartonID);
        }
    
        public virtual int SP_DSROOrderDelete(Nullable<int> dSReceivingOrderID)
        {
            var dSReceivingOrderIDParameter = dSReceivingOrderID.HasValue ?
                new ObjectParameter("DSReceivingOrderID", dSReceivingOrderID) :
                new ObjectParameter("DSReceivingOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSROOrderDelete", dSReceivingOrderIDParameter);
        }
    
        public virtual int SP_DSROSelectDelete(Nullable<int> cartonID, Nullable<bool> status)
        {
            var cartonIDParameter = cartonID.HasValue ?
                new ObjectParameter("CartonID", cartonID) :
                new ObjectParameter("CartonID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSROSelectDelete", cartonIDParameter, statusParameter);
        }
    
        public virtual ObjectResult<SP_DSRptBillingByCustomers_Result> SP_DSRptBillingByCustomers(Nullable<int> billingID)
        {
            var billingIDParameter = billingID.HasValue ?
                new ObjectParameter("BillingID", billingID) :
                new ObjectParameter("BillingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSRptBillingByCustomers_Result>("SP_DSRptBillingByCustomers", billingIDParameter);
        }
    
        public virtual int SP_DSRptBillingDetails(Nullable<int> customerID, Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varToDate)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));
    
            var varToDateParameter = varToDate.HasValue ?
                new ObjectParameter("varToDate", varToDate) :
                new ObjectParameter("varToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSRptBillingDetails", customerIDParameter, varFromDateParameter, varToDateParameter);
        }
    
        public virtual int SP_DSRptStockByLocation(string varcondition)
        {
            var varconditionParameter = varcondition != null ?
                new ObjectParameter("varcondition", varcondition) :
                new ObjectParameter("varcondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSRptStockByLocation", varconditionParameter);
        }
    
        public virtual int SP_DSRptStockDispatchedDetailSelectCustomers(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string varcondition)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var varconditionParameter = varcondition != null ?
                new ObjectParameter("varcondition", varcondition) :
                new ObjectParameter("varcondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSRptStockDispatchedDetailSelectCustomers", fromDateParameter, toDateParameter, varconditionParameter);
        }
    
        public virtual int SP_DSRptStockDispatchedDetailSelectCustomersAll(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSRptStockDispatchedDetailSelectCustomersAll", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SP_DSRptStockDispatchedReport_Result> SP_DSRptStockDispatchedReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> customerID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSRptStockDispatchedReport_Result>("SP_DSRptStockDispatchedReport", fromDateParameter, toDateParameter, customerIDParameter);
        }
    
        public virtual int SP_DSRptStockDispatchedSelectCustomers_bk2016_02_25(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string varcondition)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var varconditionParameter = varcondition != null ?
                new ObjectParameter("varcondition", varcondition) :
                new ObjectParameter("varcondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSRptStockDispatchedSelectCustomers_bk2016_02_25", fromDateParameter, toDateParameter, varconditionParameter);
        }
    
        public virtual int SP_DSRptStockDispatchedSelectCustomersAll_bk2016_02_25(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSRptStockDispatchedSelectCustomersAll_bk2016_02_25", fromDateParameter, toDateParameter);
        }
    
        public virtual int SP_DSRptStockMovementSelectCustomers(string varFromDate, string varToDate, string varcondition)
        {
            var varFromDateParameter = varFromDate != null ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(string));
    
            var varToDateParameter = varToDate != null ?
                new ObjectParameter("varToDate", varToDate) :
                new ObjectParameter("varToDate", typeof(string));
    
            var varconditionParameter = varcondition != null ?
                new ObjectParameter("varcondition", varcondition) :
                new ObjectParameter("varcondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSRptStockMovementSelectCustomers", varFromDateParameter, varToDateParameter, varconditionParameter);
        }
    
        public virtual int SP_DSRptStockMovementSelectCustomersAll(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varToDate)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));
    
            var varToDateParameter = varToDate.HasValue ?
                new ObjectParameter("varToDate", varToDate) :
                new ObjectParameter("varToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSRptStockMovementSelectCustomersAll", varFromDateParameter, varToDateParameter);
        }
    
        public virtual int SP_DSRptStockMovementSelectCustomersAllStockOnHand(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varToDate)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));
    
            var varToDateParameter = varToDate.HasValue ?
                new ObjectParameter("varToDate", varToDate) :
                new ObjectParameter("varToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSRptStockMovementSelectCustomersAllStockOnHand", varFromDateParameter, varToDateParameter);
        }
    
        public virtual ObjectResult<SP_DSRptStockOnHandCombo_Result> SP_DSRptStockOnHandCombo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSRptStockOnHandCombo_Result>("SP_DSRptStockOnHandCombo");
        }
    
        public virtual int SP_DSRptStockReceivedDetailsSelectCustomers(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string varcondition)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var varconditionParameter = varcondition != null ?
                new ObjectParameter("varcondition", varcondition) :
                new ObjectParameter("varcondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSRptStockReceivedDetailsSelectCustomers", fromDateParameter, toDateParameter, varconditionParameter);
        }
    
        public virtual int SP_DSRptStockReceivedDetailsSelectCustomersAll(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSRptStockReceivedDetailsSelectCustomersAll", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SP_DSRptStockReceivedReport_Result> SP_DSRptStockReceivedReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> customerID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSRptStockReceivedReport_Result>("SP_DSRptStockReceivedReport", fromDateParameter, toDateParameter, customerIDParameter);
        }
    
        public virtual int SP_DSRptStockReceivedSelectCustomers_bk2016_02_25(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string varcondition)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var varconditionParameter = varcondition != null ?
                new ObjectParameter("varcondition", varcondition) :
                new ObjectParameter("varcondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSRptStockReceivedSelectCustomers_bk2016_02_25", fromDateParameter, toDateParameter, varconditionParameter);
        }
    
        public virtual int SP_DSRptStockReceivedSelectCustomersAll_bk2016_02_25(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSRptStockReceivedSelectCustomersAll_bk2016_02_25", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SP_DSStockByLocationDetails_Result> SP_DSStockByLocationDetails(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSStockByLocationDetails_Result>("SP_DSStockByLocationDetails", customerIDParameter);
        }
    
        public virtual ObjectResult<SP_DSStockByLocationDetailsAllCustomer_Result> SP_DSStockByLocationDetailsAllCustomer(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSStockByLocationDetailsAllCustomer_Result>("SP_DSStockByLocationDetailsAllCustomer", customerIDParameter);
        }
    
        public virtual ObjectResult<SP_DSStockByLocationDetailsByCustomer_Result> SP_DSStockByLocationDetailsByCustomer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSStockByLocationDetailsByCustomer_Result>("SP_DSStockByLocationDetailsByCustomer");
        }
    
        public virtual ObjectResult<SP_DSStockByLocationDetailsByCustomerAllCustomer_Result> SP_DSStockByLocationDetailsByCustomerAllCustomer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSStockByLocationDetailsByCustomerAllCustomer_Result>("SP_DSStockByLocationDetailsByCustomerAllCustomer");
        }
    
        public virtual ObjectResult<SP_DSStockMovementReportListBox_Result> SP_DSStockMovementReportListBox()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSStockMovementReportListBox_Result>("SP_DSStockMovementReportListBox");
        }
    
        public virtual ObjectResult<SP_DSStockOnHandByLocationByBay_Result> SP_DSStockOnHandByLocationByBay(string locationNumber, Nullable<int> location)
        {
            var locationNumberParameter = locationNumber != null ?
                new ObjectParameter("LocationNumber", locationNumber) :
                new ObjectParameter("LocationNumber", typeof(string));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSStockOnHandByLocationByBay_Result>("SP_DSStockOnHandByLocationByBay", locationNumberParameter, locationParameter);
        }
    
        public virtual int SP_DSStockOnHandDailyInsert()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DSStockOnHandDailyInsert");
        }
    
        public virtual ObjectResult<SP_DSStockOnHandReport_Result> SP_DSStockOnHandReport(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSStockOnHandReport_Result>("SP_DSStockOnHandReport", customerIDParameter);
        }
    
        public virtual ObjectResult<SP_DSStockOnHandReport_Export_GSK_Result> SP_DSStockOnHandReport_Export_GSK(Nullable<int> customerID, Nullable<System.DateTime> date)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSStockOnHandReport_Export_GSK_Result>("SP_DSStockOnHandReport_Export_GSK", customerIDParameter, dateParameter);
        }
    
        public virtual ObjectResult<SP_DSStockOnHandReportByCartons_Result> SP_DSStockOnHandReportByCartons(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSStockOnHandReportByCartons_Result>("SP_DSStockOnHandReportByCartons", customerIDParameter);
        }
    
        public virtual ObjectResult<SP_DSStockOnHandReportByDate_Result> SP_DSStockOnHandReportByDate(Nullable<int> customerID, Nullable<System.DateTime> date)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSStockOnHandReportByDate_Result>("SP_DSStockOnHandReportByDate", customerIDParameter, dateParameter);
        }
    
        public virtual ObjectResult<SP_DSStockTakeByRequest_Result> SP_DSStockTakeByRequest(string varCustomerString)
        {
            var varCustomerStringParameter = varCustomerString != null ?
                new ObjectParameter("varCustomerString", varCustomerString) :
                new ObjectParameter("varCustomerString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DSStockTakeByRequest_Result>("SP_DSStockTakeByRequest", varCustomerStringParameter);
        }
    
        public virtual int SP_DStmpCartonDescription()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DStmpCartonDescription");
        }
    
        public virtual int SP_DStmpCustomerUpdate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DStmpCustomerUpdate");
        }
    
        public virtual int SP_Gate_ContInOutUpdate(Nullable<int> contInOutID)
        {
            var contInOutIDParameter = contInOutID.HasValue ?
                new ObjectParameter("ContInOutID", contInOutID) :
                new ObjectParameter("ContInOutID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Gate_ContInOutUpdate", contInOutIDParameter);
        }
    
        public virtual int SP_Gate_ContInOutUpdateQty(Nullable<int> contInOutID, string qty)
        {
            var contInOutIDParameter = contInOutID.HasValue ?
                new ObjectParameter("ContInOutID", contInOutID) :
                new ObjectParameter("ContInOutID", typeof(int));
    
            var qtyParameter = qty != null ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Gate_ContInOutUpdateQty", contInOutIDParameter, qtyParameter);
        }
    
        public virtual int SP_Gate_TruckInOutUpdate(Nullable<int> truckInOutID)
        {
            var truckInOutIDParameter = truckInOutID.HasValue ?
                new ObjectParameter("TruckInOutID", truckInOutID) :
                new ObjectParameter("TruckInOutID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Gate_TruckInOutUpdate", truckInOutIDParameter);
        }
    
        public virtual int SP_Gate_TruckInOutUpdateQty(Nullable<int> truckInOutID, string qty)
        {
            var truckInOutIDParameter = truckInOutID.HasValue ?
                new ObjectParameter("TruckInOutID", truckInOutID) :
                new ObjectParameter("TruckInOutID", typeof(int));
    
            var qtyParameter = qty != null ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Gate_TruckInOutUpdateQty", truckInOutIDParameter, qtyParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<SP_UserFullName_Result> SP_UserFullName()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_UserFullName_Result>("SP_UserFullName");
        }
    
        public virtual int SPDOCartonsExportToDDInsert(Nullable<int> dSRDID, string owner)
        {
            var dSRDIDParameter = dSRDID.HasValue ?
                new ObjectParameter("DSRDID", dSRDID) :
                new ObjectParameter("DSRDID", typeof(int));
    
            var ownerParameter = owner != null ?
                new ObjectParameter("Owner", owner) :
                new ObjectParameter("Owner", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPDOCartonsExportToDDInsert", dSRDIDParameter, ownerParameter);
        }
    
        public virtual int SPEDI_DSProcessDispatchingOrder(Nullable<int> requestID, string dSOwner)
        {
            var requestIDParameter = requestID.HasValue ?
                new ObjectParameter("RequestID", requestID) :
                new ObjectParameter("RequestID", typeof(int));
    
            var dSOwnerParameter = dSOwner != null ?
                new ObjectParameter("DSOwner", dSOwner) :
                new ObjectParameter("DSOwner", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPEDI_DSProcessDispatchingOrder", requestIDParameter, dSOwnerParameter);
        }
    
        public virtual int spx_ImportFromExcel07(string filePath, string requestID)
        {
            var filePathParameter = filePath != null ?
                new ObjectParameter("FilePath", filePath) :
                new ObjectParameter("FilePath", typeof(string));
    
            var requestIDParameter = requestID != null ?
                new ObjectParameter("RequestID", requestID) :
                new ObjectParameter("RequestID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spx_ImportFromExcel07", filePathParameter, requestIDParameter);
        }
    
        public virtual ObjectResult<STGate_VehicleBound_Result> STGate_VehicleBound(string orderNumber)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_VehicleBound_Result>("STGate_VehicleBound", orderNumberParameter);
        }
    
        public virtual ObjectResult<STGate_VehicleInOutRemain_Result> STGate_VehicleInOutRemain()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_VehicleInOutRemain_Result>("STGate_VehicleInOutRemain");
        }
    
        public virtual ObjectResult<STGate_VehicleInOutToday_Result> STGate_VehicleInOutToday()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_VehicleInOutToday_Result>("STGate_VehicleInOutToday");
        }
    
        public virtual int STGate_VehicleInOutUpdateOrderNumber(string vehicleType, string orderNumber, Nullable<int> vehicleInOutID, string quantityOut, string userCheckOut, Nullable<int> customerID, string customerName, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime, string reason, Nullable<System.DateTime> startWorkingTime, Nullable<System.DateTime> endWorkingTime)
        {
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));
    
            var vehicleInOutIDParameter = vehicleInOutID.HasValue ?
                new ObjectParameter("VehicleInOutID", vehicleInOutID) :
                new ObjectParameter("VehicleInOutID", typeof(int));
    
            var quantityOutParameter = quantityOut != null ?
                new ObjectParameter("QuantityOut", quantityOut) :
                new ObjectParameter("QuantityOut", typeof(string));
    
            var userCheckOutParameter = userCheckOut != null ?
                new ObjectParameter("UserCheckOut", userCheckOut) :
                new ObjectParameter("UserCheckOut", typeof(string));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));
    
            var startWorkingTimeParameter = startWorkingTime.HasValue ?
                new ObjectParameter("StartWorkingTime", startWorkingTime) :
                new ObjectParameter("StartWorkingTime", typeof(System.DateTime));
    
            var endWorkingTimeParameter = endWorkingTime.HasValue ?
                new ObjectParameter("EndWorkingTime", endWorkingTime) :
                new ObjectParameter("EndWorkingTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STGate_VehicleInOutUpdateOrderNumber", vehicleTypeParameter, orderNumberParameter, vehicleInOutIDParameter, quantityOutParameter, userCheckOutParameter, customerIDParameter, customerNameParameter, startTimeParameter, endTimeParameter, reasonParameter, startWorkingTimeParameter, endWorkingTimeParameter);
        }
    }
}
